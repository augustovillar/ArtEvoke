services:
  mysql:
    image: mysql:8.0
    container_name: local-mysql
    restart: unless-stopped
    expose:
      - "3306"
    env_file:
      - ./data/db/.env.mysql
    command: [
      "mysqld",
      "--default-authentication-plugin=mysql_native_password",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
      "--sql-mode=STRICT_ALL_TABLES",
      "--innodb_print_all_deadlocks=ON"
    ]
    volumes:
      - mysql_data:/var/lib/mysql
      - ./data/db/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - ./data/db/schemas:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - app_network

  backend:
    build:
      context: ./FastAPI
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - ./FastAPI/.env
    environment:
      - STATIC_DIR=/app/data/static
    volumes:
      - ./FastAPI:/app
      - ./data:/app/data  # Mount entire data directory
    networks:
      - app_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_API_URL: /api
    depends_on:
      - backend
    networks:
      - app_network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  nginx:
    image: nginx:latest
    container_name: artevoke_nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_CONFIG=nginx-local.conf
    volumes:
      - ./nginx/${NGINX_CONFIG}:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - app_network

volumes:
  mysql_data:

networks:
  app_network:
    driver: bridge